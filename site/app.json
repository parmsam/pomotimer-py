[{"name": "app.py", "content": "from shiny import *\nimport time\nimport sys\nfrom pathlib import Path\nfrom typing import List\nfrom shiny.types import NavSetArg\n# import htmltools\n\n# Helper functions\ndef min_to_sec(minutes):\n    return minutes * 60\n\ndef get_current_date():\n    curr_date = time.strftime(\"%a - %b %d, %Y\", time.localtime())\n    return curr_date\n\ndef fmt_seconds(time_in_seconds):\n    return time.strftime(\"%H:%M:%S\", time.gmtime(time_in_seconds))\n\n\n# Declare paths to static assets\ncss_file = Path(__file__).parent / \"www\" / \"styles.css\"\njs_file = Path(__file__).parent / \"www\" / \"script.js\"\n\nlong_break_image = \"https://thumbs.gfycat.com/BriskLankyCopperhead-size_restricted.gif\"\npomo_image = \"https://cdn.dribbble.com/users/1341046/screenshots/3993533/media/d5d7198e3cd99068106a19679b4d7ee5.gif\"\nshort_break_image = \"https://media0.giphy.com/media/v1.Y2lkPTc5MGI3NjExemt1NmJnZGRsNGRvYmY5NThld2N1dzJpYWdudGQwazFzN2UxdTR6NiZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/MfeD9WGuYxVUk/giphy.gif\"\n\napp_link = \"https://github.com/parmsam/pomotimer-py\",\n\nmp3_link = \"https://github.com/JanLoebel/MMM-TouchAlarm/blob/master/sounds/alarm.mp3?raw=true\"\n\n# Declare navbar for app\ndef nav_controls(prefix: str) -> List[NavSetArg]:\n    return [\n        ui.nav(\"timer\",\n               ui.div(\n                   ui.input_action_button(\"pomo\", \"pomo\", class_=\"btn-red\"),\n                   ui.input_action_button(\n                       \"short_break\", \"short break\", class_=\"btn-purple\"),\n                   ui.input_action_button(\n                       \"long_break\", \"long break\", class_=\"btn-blue\"),\n                   class_=\"time-btns\",\n               ),\n               ui.h6(ui.output_text(\"current_date\")),\n               ui.h2(ui.output_text(\"time_left\")),\n               ui.br(),\n               ui.div(\n                   ui.input_action_button(\n                       \"start\", \"start/stop\", class_=\"btn-primary\"),\n                   ui.input_action_button(\n                       \"reset\", \"reset\", class_=\"btn-warning\"),\n                   class_=\"main-btns\",\n               ),\n               ui.br(),\n        ),\n        ui.nav(\"settings\",\n               ui.div(\n                   ui.input_checkbox(\"include_images\", \"include gifs\", \n                                     value=False),\n                   ui.input_numeric(\n                        \"pomo_length\", \"pomo (min)\", \n                        value=25,\n                        width='45%'),\n                   ui.input_numeric(\n                        \"short_break_length\",\n                        \"short break (min)\", \n                        value=5,\n                        width='45%'),\n                   ui.input_numeric(\n                       \"long_break_length\", \n                       \"long break (min)\", \n                       value=10,\n                       width='45%'),\n                   class_=\"settings\",\n               ),\n        ),\n        ui.nav_control(\n            ui.a(\n                \"github\",\n                href= str(app_link),\n                target=\"_blank\",\n            ),\n        ),\n    ]\n\n# Define the app \napp_ui = ui.page_fluid(\n    ui.include_js(str(js_file), method = \"link_files\"),\n    ui.include_css(str(css_file), method = \"link_files\"),\n    ui.h1(\"pomotimer-py \ud83c\udf45\", class_ = \"main_title\"),\n    ui.navset_pill_card(*nav_controls(\"_\")),\n)\n\ndef server(input, output, session):\n    # Update the current time every second\n    curr_time = reactive.Value(time.time())\n    timer_active = reactive.Value(False)\n    remaining_time = reactive.Value(-1)\n\n    # Track the remaining pomo minutes \n    @reactive.Effect\n    def _():\n        reactive.invalidate_later(1)\n        if (timer_active.get() == True):\n            curr_time.set(time.time())\n            with reactive.isolate():\n                remaining_time.set(remaining_time.get() - 1)\n                if(remaining_time.get() == 0):\n                    timer_active.set(False)\n                    m = ui.modal(\n                        \"Time is up.\",\n                        title=\"Nicely done!\",\n                        easy_close=True,\n                        footer=\"Pomotimer-py\",\n                    )\n                    ui.modal_show(m)  \n\n    @reactive.Effect\n    @reactive.event(input.pomo)\n    def set_pomo_reg():\n        remaining_time.set(input.pomo_length()*60)\n        if(input.include_images()):\n            ui.remove_ui(selector=\"div.running_img\")\n            ui.insert_ui(\n                ui.div(\n                    ui.br(),\n                    ui.img(src = pomo_image),\n                    class_=\"running_img\",\n                ),\n                selector=\"#reset\",\n                where=\"afterEnd\",\n            )\n\n    @reactive.Effect\n    @reactive.event(input.short_break)\n    def set_pomo_short():\n        remaining_time.set(int(input.short_break_length()*60))\n        if(input.include_images()):\n            ui.remove_ui(selector=\"div.running_img\")\n            ui.insert_ui(\n                ui.div(\n                    ui.br(),\n                    ui.img(src=short_break_image),\n                    class_=\"running_img\",\n                ),\n                selector=\"#reset\",\n                where=\"afterEnd\",\n            )\n\n    @reactive.Effect\n    @reactive.event(input.long_break)\n    def set_pomo_long():\n        remaining_time.set(input.long_break_length()*60)\n        if(input.include_images()):\n            ui.remove_ui(selector=\"div.running_img\")\n            ui.insert_ui(\n                ui.div(\n                    ui.br(),\n                    ui.img(src=long_break_image),\n                    class_=\"running_img\",\n                ),\n                selector=\"#reset\",\n                where=\"afterEnd\",\n            )\n\n    # Reset the timer\n    @reactive.Effect\n    @reactive.event(input.reset)\n    def reset_stop_time():\n        remaining_time.set(0)\n        ui.remove_ui(selector=\"div.running_img\")\n\n    # Start/stop the timer\n    @reactive.Effect\n    @reactive.event(input.start)\n    def stop_timer():\n        timer_active.set(\n            not (timer_active.get())\n        )\n\n    # Update the time left\n    @output\n    @render.text\n    def time_left():\n        if (remaining_time.get() == 0):\n            remaining_time.set(0)\n            return \"Select a timer\"\n        print(remaining_time.get())\n        if (remaining_time.get()) > 0:\n            return fmt_seconds(remaining_time.get())\n        remaining_time.set(0)\n\n        return \"Time's up!\"\n    \n    # Update the current date\n    @output\n    @render.text\n    def current_date():\n        return get_current_date()\n\n\napp = App(app_ui, server, debug=False)\n", "type": "text"}, {"name": "README.md", "content": "\n# pomotimer-py\n\nA simple pomodoro timer written in Shiny for Python.\n\n# app link\n\n- [Shinylive.io](https://shinylive.io/py/app/#code=NobwRAdghgtgpmAXGKAHVA6VBPMAaMAYwHsIAXOcpMAMwCdiYACAZwAsBLCbJjmVYnTJMAVAB0IfAUKZk+cCfUZNUUMmwA2HAEa9+g4QAU1bRQ2ZlsqLgHM904QBkOLMmeXsu2DJdRwW9gZMAHJQAG4AynBkAIJ0NhISAMRMABJwGn50TDQArhCEcqQsEgAmcDRMMFwA+mTENSxwhAAU1RC5FCwAlIgSTANMdNG5dBBVXJ3+okwAbAAMiRDllTbRNYSjw+Q1pWpwLb39g5t0dLv7TAC8svIYrnQ0cvAtYmAApFBMALRM77rvUp4P4ATTewOecAwGmIhCgGkhh26xwGwzIo3Gp3OewoSxWORgZEazVIpRYLUhNVqTRIyx6fXGgzRGNu8HuZEeiLe71SiHeAFk+RFwayoTZCfIKfIqRBibSyd1kRAlikACLNDRQYYqEwBeqsMhqDiEJhQFhNMglArmmo0DgaODXJjGdQtGq2+1wd3dLBayjCAD0TDeAHcw28mEG3q5sA6WBhCOa3ksYRAbDVtMMoABrKkwKBrJ1vNhkMioFiIAMB9S5GDaeM2GjYOFkBOMAMAIToLmzjigEGz2AAwsR0HA6Gw4FBSt8WBwAF5e4YPY0UUoYGwcGjJiACGANPgFx03Yul8uVgOEUoQDClbvaB8OtswAO5Jp0FgBgCMAGYACxfvMf6zAGLCEMMlDsMQloBj+ACccE-gArD+P4BvApQcFAAalEhpQAOxfnBAAccA-leCHzLMxGAbMUBEbM+Fwdof4EXAcBIRuW47lBQgZlmuaHoWJ5gCWZYVlWGFYfMXGoGw3gkC+UnYWEX4YCCABMGjZoYAAqhBIfyADiACSP7BAAVgAogAHnAhJfsEMAAFIQAAWkZABKLDBF5YQgjAIJIcEumaKUGnBF+pTzs5qAggA6qUuSlEZACKIZQPOABi87BBpACqNmlLpnmzMEHBuRohCql+Gn8gAanBqDaBAnlVTASFsNoWVwdA8VuTQIIQBoNBQPFqWBT+qVwW5IYBvyNBwKqcHxUZuQgjZ9X5dmAabnJ3ibtuYAqkw6qEJq2rQGE2hajkgimugeIVEwV0bKQHLEBo5KoMMdo2YgBp0N0PwAHxMM4rjAKEkTRHENgALoMoMQwjGMTDACiyNMLkHAYFdrxgJCdDgpjWNkzjt4cGEryMmTdPIxTXCoJ0NRQIUHCkBmnT1BABN7sQIpvPzIrnWaLA1FcbzaGQEDfMMpRvN0eCk-T5O40zLNs0UsraNzpA06rhvI9GbAGPxU7ZoLYC8cImYWyLmo2pLYDS7LzN0KgDqK8rtNG1jjO7pr7Oc7rpb6yrftY28qbpnbOZWzHTBx5b+BMKLTtSzL3zaBouQKGASsR376fi87kLZzLJT4EXdOF77RsU2wswtBTxCdMzRIUDZZAE1i-oXLiBd15HAyNxpLe423ZYs13PdvJSDpPIrw8jxTmaHD7I-Y7jmHUzXhsBx3rPBzreu8-vkfRoaQhW64WpkKB9SoA7YsS5nbvdvmdDYN7F-04fQdtZczDufeuW9BhvGXNEK2UC3CpxLm-F2WcMpjFsL-MBkcEHO3zFwCuEAq6bxHivSOa86AbyLsQ-2uN8bRmiHINMBC-6DAprvA24DR7q0DkSQgk5CDZm0MQGyBMuDnWSl6IS-grYiNzuUJgh0CFMDCPCPOVwsrwiaJQreACiQdHgN2VoTCjZC0YA0B0aZ1BW35kwNoXBkSp0MYbJRuc4BXA0khQh7CsYhg4KUdQVwADkf4kLvH8Zo1enCj66PHMaNhnjjbW1NnxZONQzE2AsdXDB7CTZBGTtY9odjgQONVk4lR7iin028b4tgASgkhLCSQiJLMon6NiXE4MYAY7mxzCkygaTTD2MyVvaOpA7C5JsRAApwZBkjxKS4wCHi2mVL8YE4JoSFlbywbQ0sthGHTKxvUpgByKavVpB9DQrT-64ygBcoxYBNw1m0CTPZWM2C-WdmJc8VZ7lsFyNoZ8AZVB0BgCwWAAKTFE2+DgJ54Dr5rDIM7DMmoBzQqNkqemlD4YnXVHaCAjp1COjQKgKZhKag4ydBTVQaxbS5x8a0gOojygbHNC0RM4s7QOkoY3L8fNwXyDoJCnggAeDcAKL7L8bRFjADg2UcgyBewLgs454QLQ1GsBoDQGwtSlBaCIE570GBfQJjUZePslRlGeu+MI44WgazIMCKeHdgRNHNBzCZSNBgpHyqgHEeLJxpy2P6UUTA4CWu-qwEkyxMZYjqPIJ0WZ2aWowPVZRBxIQ+ElIqTGRNj5yEtbGqc8aoRJucS0NRX04BoqZPZKAXBbDRvgHmrWVNC3JpaN8L8prfYpF0nQNm2ZZC+uGFK2wKgTETA6F0KZyMAACcac1QisjQRahRMb4hqIcN1ZNZ1NowFwJxPj9gpP2GQ9tRctzWKzY2hNcLDjXBuN2vORxnlRtTRaKUbJEQZued49QKNL1QhcJ9fY66imDurZINMdaoSvtAzWiDqbr3A1+Ce55yMtwtBg+B9M8Hog3quDceYj62kXoLfcHDpaNHlMGMwG4FN9x7HOZRsmbxdIxpcNjTAKK2kDBlQ6Z25VCAZB4KUUgcAACEnGuNThYNgDYMImhXHvXAdZcSaDEGguOZ2hheV6IFRJ8BFbPG0eIPRxopsQxtGBlMzGM781zowAupdbhfY2b-RgYN-prVcKwCYgzTB8TKv5jUYYNhgOZIw7Wl9OGbXef3D08xbBDgiAWL51DNBPMdx3QUGR4j8xrHJIqDdqsKaDuIJa0lHAWhNAdIUQQztd4YDoPkTDeYEgFz-gHd8RIcY3IPjvKmPWGkYHXgcv2jMYAhZYHQE0NxAsSJG0bTZYBGsQGa3wVrynDbzbJlV5o9Q6DOySLAvTRsQyTmGM7KATxxxWQjRkv2Hbp1boTQ53b1mntQnc+QdLnR7iJKJMnXz-n1iBZtqF+m4W4N3FfVwHu0WbZdNzKk103QksEZS4MND0XpFiLzEefLhGG64xK2V7rO2av7bePV5bq3xuK3a5wzr5WBuXMpnvFDdNSHkPZ2rHd43KtTauPD5Jc2NuYMdqXSBTXa1reO5t0X9Myd7YO0du7W9TvjhcW8S7FA6A3YVqrzbSxHu2e3S95dzn3tuctV96LnSAcrvNcDkxKSRlg7phDrDUOotebtwJOLfTEvJdPWlrHWWccSPx4VlnxOvSk4yLt2rlOqYNalxBmXbXnkdfHF1irRSWH9cY9vIbZCttFfVnzybhAri+4trjtYpf6aLep9L2nBvI4N8GIrxPYBDv+GgW3v26vzta6u7r278vBgPfdUwTyffhD4tFMTC3JvnuLte8v1zn3YdedgYD56sDGhP0g27zdVbYOe7ZK+gjRdiv2VK7HirXeKdgCp6n9M6ep8DBSBEa+D9XCjn7TxT5TexX3nTX3N2N032t23wyzviED30qH-1QEgxLyj0GGIzs1fT-ggGgnPT5WzW3QQ3RwGE-yYA9S9UuAX0hCYEXic2nXtU6BAOWHHB8DgG7gd0qAXgqB7gJzJjPXQzP2a2wx4NvSYAIzQNPyHUh0vxw2v2eWZDRjeCiGq2EC+CJh3Hph+hhwEKkIvzFBw0-Xpn4I90gw3AMOBjBnmAkKxgUPGBoEJDlFJHJBMOEKRCLhcK9x7jkPB1RnGGY3kH8QCFyFQHE2Ol9kxnIO9UAL9TOADW9WswYLoMGBs2YLoFYPYN9nxD7h2G9RPxsN8LkXWGyKJFyI7QkEJSdBiHQBaBJRxkdXHBDWBHKF1hsFUXUXLSWDAAAF88BwBoB4BqAww5owJuxUBWwLIWB8AiB3p-RqA8gChtYVBNRsAIg25lgW46ANBgYQBMYlFsgvgbhcUQwmAYhkoOYNitiABuTGKALAZYw4a4iALoiQbo3oyAWABAZAIYx+WMfwBMc0KY05WY5ADAKVaNWVR0HY32VTcgWcBcOAAGNxVAGyR45GGEsgb4EMOADgGwEsAGARDQUoVEk4T6QQAGPYOgbMeWR4545UCAJIYogeSEzGdEuExcRE+YZE4kgYVkrEnEvEpOT6IkyNUkugfEzUPhGklULgp4JgKEtE96NkhEpgJCTklElkxUvk3EsgfEoU7ktOUU8U3tKUukobGWOUzGAROgcoflHtTCN8AGVUrky0wQG0gGL8ZE1gT6HxMgwgP0-U1QUoTCNMd0tUpgDSNU-U1kucdkpgL8WYZ032U4FgMkkdGHccfUr+TcCAUMxM2kiQFPFbFvOwNbC032fMGyTEnxdQDkyMzGCs74ScfknU8M+YOsp47o+GIAA)\n\n# Installation\n\nTo generate the project using Shinylive, I ran the following command within the project directory:\n- `shinylive export . site --full-shinylive`\n\n", "type": "text"}, {"name": "requirements.txt", "content": "shiny\nshinylive\npathlib", "type": "text"}, {"name": "www/script.js", "content": "// Helper functions\nlet playSound = (url) => {\n    let a = new Audio(url);\n    a.play();\n}\n\nlet hmsToSeconds = (str) => {\n    let p = str.split(':'),\n        s = 0, m = 1;\n    while (p.length > 0) {\n        s += m * parseInt(p.pop(), 10);\n        m *= 60;\n    }\n    return s;\n}\n\n// Objects to be used\nlet exampleSound = \"https://github.com/JanLoebel/MMM-TouchAlarm/blob/master/sounds/alarm.mp3?raw=true\"\nlet timeLeft\nlet secLeft\n\n// Event listeners\n$(document).ready(function(){\n    $(\"#start\").click(function(){\n        console.log(\"Start/stop btn was clicked.\")\n    });\n    $(\"#reset\").click(function(){\n        console.log(\"Reset btn was clicked.\")\n    });\n    $(document).on('shiny:recalculated', function(event) {\n        timeLeft = document.querySelector(\"#time_left\").textContent;\n        secLeft = hmsToSeconds(timeLeft)\n        if(secLeft < 1.5){\n            console.log(\"Play sounding alarm\")\n            playSound(exampleSound)\n        }\n    });\n});", "type": "text"}, {"name": "www/styles.css", "content": ".main_title {\n    font-size: 25px;\n    font-weight: bold;\n    color: darkred;\n}\n\n#current_date {\n    font-size: 20px;\n    font-weight: bold;\n    color: black;\n}\n\n#time_left {\n    font-size: 50px;\n    font-weight: bold;\n    color: black;\n}\n\n.btn {\n    border-radius: 50px;\n    border: 1px solid #ccc;\n    padding: 10px 20px;\n    font-size: 16px;\n    cursor: pointer;\n    margin: 10px;\n}\n\n.running_img img {\n    max-width: 200px;\n    max-height: 200px;\n}", "type": "text"}]